/**
 * generated by Xtext 2.15.0
 */
package fr.cea.nabla.nabla.provider;

import fr.cea.nabla.nabla.util.NablaAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class NablaItemProviderAdapterFactory extends NablaAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NablaItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.NablaModule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NablaModuleItemProvider nablaModuleItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.NablaModule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNablaModuleAdapter() {
		if (nablaModuleItemProvider == null) {
			nablaModuleItemProvider = new NablaModuleItemProvider(this);
		}

		return nablaModuleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Import} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportItemProvider importItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Import}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImportAdapter() {
		if (importItemProvider == null) {
			importItemProvider = new ImportItemProvider(this);
		}

		return importItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Job} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JobItemProvider jobItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Job}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJobAdapter() {
		if (jobItemProvider == null) {
			jobItemProvider = new JobItemProvider(this);
		}

		return jobItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Iterable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IterableItemProvider iterableItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Iterable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIterableAdapter() {
		if (iterableItemProvider == null) {
			iterableItemProvider = new IterableItemProvider(this);
		}

		return iterableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Instruction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstructionItemProvider instructionItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Instruction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstructionAdapter() {
		if (instructionItemProvider == null) {
			instructionItemProvider = new InstructionItemProvider(this);
		}

		return instructionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.SimpleVarDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpleVarDefinitionItemProvider simpleVarDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.SimpleVarDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimpleVarDefinitionAdapter() {
		if (simpleVarDefinitionItemProvider == null) {
			simpleVarDefinitionItemProvider = new SimpleVarDefinitionItemProvider(this);
		}

		return simpleVarDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.VarGroupDeclaration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VarGroupDeclarationItemProvider varGroupDeclarationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.VarGroupDeclaration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVarGroupDeclarationAdapter() {
		if (varGroupDeclarationItemProvider == null) {
			varGroupDeclarationItemProvider = new VarGroupDeclarationItemProvider(this);
		}

		return varGroupDeclarationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.InstructionBlock} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstructionBlockItemProvider instructionBlockItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.InstructionBlock}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstructionBlockAdapter() {
		if (instructionBlockItemProvider == null) {
			instructionBlockItemProvider = new InstructionBlockItemProvider(this);
		}

		return instructionBlockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Loop} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoopItemProvider loopItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Loop}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoopAdapter() {
		if (loopItemProvider == null) {
			loopItemProvider = new LoopItemProvider(this);
		}

		return loopItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Affectation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AffectationItemProvider affectationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Affectation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAffectationAdapter() {
		if (affectationItemProvider == null) {
			affectationItemProvider = new AffectationItemProvider(this);
		}

		return affectationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.If} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IfItemProvider ifItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.If}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIfAdapter() {
		if (ifItemProvider == null) {
			ifItemProvider = new IfItemProvider(this);
		}

		return ifItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Return} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReturnItemProvider returnItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Return}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReturnAdapter() {
		if (returnItemProvider == null) {
			returnItemProvider = new ReturnItemProvider(this);
		}

		return returnItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.IterationBlock} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IterationBlockItemProvider iterationBlockItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.IterationBlock}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIterationBlockAdapter() {
		if (iterationBlockItemProvider == null) {
			iterationBlockItemProvider = new IterationBlockItemProvider(this);
		}

		return iterationBlockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.SpaceIterationBlock} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpaceIterationBlockItemProvider spaceIterationBlockItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.SpaceIterationBlock}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpaceIterationBlockAdapter() {
		if (spaceIterationBlockItemProvider == null) {
			spaceIterationBlockItemProvider = new SpaceIterationBlockItemProvider(this);
		}

		return spaceIterationBlockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.DimensionIterationBlock} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DimensionIterationBlockItemProvider dimensionIterationBlockItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.DimensionIterationBlock}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDimensionIterationBlockAdapter() {
		if (dimensionIterationBlockItemProvider == null) {
			dimensionIterationBlockItemProvider = new DimensionIterationBlockItemProvider(this);
		}

		return dimensionIterationBlockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.SpaceIterator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpaceIteratorItemProvider spaceIteratorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.SpaceIterator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpaceIteratorAdapter() {
		if (spaceIteratorItemProvider == null) {
			spaceIteratorItemProvider = new SpaceIteratorItemProvider(this);
		}

		return spaceIteratorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.RangeSpaceIterator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RangeSpaceIteratorItemProvider rangeSpaceIteratorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.RangeSpaceIterator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRangeSpaceIteratorAdapter() {
		if (rangeSpaceIteratorItemProvider == null) {
			rangeSpaceIteratorItemProvider = new RangeSpaceIteratorItemProvider(this);
		}

		return rangeSpaceIteratorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.SingletonSpaceIterator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SingletonSpaceIteratorItemProvider singletonSpaceIteratorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.SingletonSpaceIterator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSingletonSpaceIteratorAdapter() {
		if (singletonSpaceIteratorItemProvider == null) {
			singletonSpaceIteratorItemProvider = new SingletonSpaceIteratorItemProvider(this);
		}

		return singletonSpaceIteratorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.ConnectivityCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectivityCallItemProvider connectivityCallItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.ConnectivityCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectivityCallAdapter() {
		if (connectivityCallItemProvider == null) {
			connectivityCallItemProvider = new ConnectivityCallItemProvider(this);
		}

		return connectivityCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.SpaceIteratorRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpaceIteratorRefItemProvider spaceIteratorRefItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.SpaceIteratorRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpaceIteratorRefAdapter() {
		if (spaceIteratorRefItemProvider == null) {
			spaceIteratorRefItemProvider = new SpaceIteratorRefItemProvider(this);
		}

		return spaceIteratorRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.TimeIterator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeIteratorItemProvider timeIteratorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.TimeIterator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeIteratorAdapter() {
		if (timeIteratorItemProvider == null) {
			timeIteratorItemProvider = new TimeIteratorItemProvider(this);
		}

		return timeIteratorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.ArgOrVar} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgOrVarItemProvider argOrVarItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.ArgOrVar}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgOrVarAdapter() {
		if (argOrVarItemProvider == null) {
			argOrVarItemProvider = new ArgOrVarItemProvider(this);
		}

		return argOrVarItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Var} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VarItemProvider varItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Var}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVarAdapter() {
		if (varItemProvider == null) {
			varItemProvider = new VarItemProvider(this);
		}

		return varItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.SimpleVar} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpleVarItemProvider simpleVarItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.SimpleVar}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimpleVarAdapter() {
		if (simpleVarItemProvider == null) {
			simpleVarItemProvider = new SimpleVarItemProvider(this);
		}

		return simpleVarItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.ConnectivityVar} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectivityVarItemProvider connectivityVarItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.ConnectivityVar}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectivityVarAdapter() {
		if (connectivityVarItemProvider == null) {
			connectivityVarItemProvider = new ConnectivityVarItemProvider(this);
		}

		return connectivityVarItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.ItemType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ItemTypeItemProvider itemTypeItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.ItemType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createItemTypeAdapter() {
		if (itemTypeItemProvider == null) {
			itemTypeItemProvider = new ItemTypeItemProvider(this);
		}

		return itemTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Connectivity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectivityItemProvider connectivityItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Connectivity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectivityAdapter() {
		if (connectivityItemProvider == null) {
			connectivityItemProvider = new ConnectivityItemProvider(this);
		}

		return connectivityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.ItemArgType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ItemArgTypeItemProvider itemArgTypeItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.ItemArgType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createItemArgTypeAdapter() {
		if (itemArgTypeItemProvider == null) {
			itemArgTypeItemProvider = new ItemArgTypeItemProvider(this);
		}

		return itemArgTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Function} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionItemProvider functionItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Function}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionAdapter() {
		if (functionItemProvider == null) {
			functionItemProvider = new FunctionItemProvider(this);
		}

		return functionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Reduction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReductionItemProvider reductionItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Reduction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReductionAdapter() {
		if (reductionItemProvider == null) {
			reductionItemProvider = new ReductionItemProvider(this);
		}

		return reductionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Arg} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgItemProvider argItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Arg}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgAdapter() {
		if (argItemProvider == null) {
			argItemProvider = new ArgItemProvider(this);
		}

		return argItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.DimensionSymbol} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DimensionSymbolItemProvider dimensionSymbolItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.DimensionSymbol}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDimensionSymbolAdapter() {
		if (dimensionSymbolItemProvider == null) {
			dimensionSymbolItemProvider = new DimensionSymbolItemProvider(this);
		}

		return dimensionSymbolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Expression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionItemProvider expressionItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Expression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpressionAdapter() {
		if (expressionItemProvider == null) {
			expressionItemProvider = new ExpressionItemProvider(this);
		}

		return expressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.ReductionCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReductionCallItemProvider reductionCallItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.ReductionCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReductionCallAdapter() {
		if (reductionCallItemProvider == null) {
			reductionCallItemProvider = new ReductionCallItemProvider(this);
		}

		return reductionCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.ArgOrVarRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgOrVarRefItemProvider argOrVarRefItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.ArgOrVarRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgOrVarRefAdapter() {
		if (argOrVarRefItemProvider == null) {
			argOrVarRefItemProvider = new ArgOrVarRefItemProvider(this);
		}

		return argOrVarRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.BaseType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseTypeItemProvider baseTypeItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.BaseType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseTypeAdapter() {
		if (baseTypeItemProvider == null) {
			baseTypeItemProvider = new BaseTypeItemProvider(this);
		}

		return baseTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Dimension} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DimensionItemProvider dimensionItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Dimension}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDimensionAdapter() {
		if (dimensionItemProvider == null) {
			dimensionItemProvider = new DimensionItemProvider(this);
		}

		return dimensionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.InitTimeIterator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InitTimeIteratorItemProvider initTimeIteratorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.InitTimeIterator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInitTimeIteratorAdapter() {
		if (initTimeIteratorItemProvider == null) {
			initTimeIteratorItemProvider = new InitTimeIteratorItemProvider(this);
		}

		return initTimeIteratorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.NextTimeIterator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NextTimeIteratorItemProvider nextTimeIteratorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.NextTimeIterator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNextTimeIteratorAdapter() {
		if (nextTimeIteratorItemProvider == null) {
			nextTimeIteratorItemProvider = new NextTimeIteratorItemProvider(this);
		}

		return nextTimeIteratorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.ContractedIf} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContractedIfItemProvider contractedIfItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.ContractedIf}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContractedIfAdapter() {
		if (contractedIfItemProvider == null) {
			contractedIfItemProvider = new ContractedIfItemProvider(this);
		}

		return contractedIfItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Or} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrItemProvider orItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Or}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrAdapter() {
		if (orItemProvider == null) {
			orItemProvider = new OrItemProvider(this);
		}

		return orItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.And} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AndItemProvider andItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.And}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAndAdapter() {
		if (andItemProvider == null) {
			andItemProvider = new AndItemProvider(this);
		}

		return andItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Equality} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EqualityItemProvider equalityItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Equality}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEqualityAdapter() {
		if (equalityItemProvider == null) {
			equalityItemProvider = new EqualityItemProvider(this);
		}

		return equalityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Comparison} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComparisonItemProvider comparisonItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Comparison}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComparisonAdapter() {
		if (comparisonItemProvider == null) {
			comparisonItemProvider = new ComparisonItemProvider(this);
		}

		return comparisonItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Plus} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PlusItemProvider plusItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Plus}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPlusAdapter() {
		if (plusItemProvider == null) {
			plusItemProvider = new PlusItemProvider(this);
		}

		return plusItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Minus} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinusItemProvider minusItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Minus}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinusAdapter() {
		if (minusItemProvider == null) {
			minusItemProvider = new MinusItemProvider(this);
		}

		return minusItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.MulOrDiv} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MulOrDivItemProvider mulOrDivItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.MulOrDiv}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMulOrDivAdapter() {
		if (mulOrDivItemProvider == null) {
			mulOrDivItemProvider = new MulOrDivItemProvider(this);
		}

		return mulOrDivItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Modulo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModuloItemProvider moduloItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Modulo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModuloAdapter() {
		if (moduloItemProvider == null) {
			moduloItemProvider = new ModuloItemProvider(this);
		}

		return moduloItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Parenthesis} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParenthesisItemProvider parenthesisItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Parenthesis}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParenthesisAdapter() {
		if (parenthesisItemProvider == null) {
			parenthesisItemProvider = new ParenthesisItemProvider(this);
		}

		return parenthesisItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.UnaryMinus} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryMinusItemProvider unaryMinusItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.UnaryMinus}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryMinusAdapter() {
		if (unaryMinusItemProvider == null) {
			unaryMinusItemProvider = new UnaryMinusItemProvider(this);
		}

		return unaryMinusItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.Not} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NotItemProvider notItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.Not}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNotAdapter() {
		if (notItemProvider == null) {
			notItemProvider = new NotItemProvider(this);
		}

		return notItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.IntConstant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntConstantItemProvider intConstantItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.IntConstant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntConstantAdapter() {
		if (intConstantItemProvider == null) {
			intConstantItemProvider = new IntConstantItemProvider(this);
		}

		return intConstantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.RealConstant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RealConstantItemProvider realConstantItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.RealConstant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRealConstantAdapter() {
		if (realConstantItemProvider == null) {
			realConstantItemProvider = new RealConstantItemProvider(this);
		}

		return realConstantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.BoolConstant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoolConstantItemProvider boolConstantItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.BoolConstant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoolConstantAdapter() {
		if (boolConstantItemProvider == null) {
			boolConstantItemProvider = new BoolConstantItemProvider(this);
		}

		return boolConstantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.MinConstant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinConstantItemProvider minConstantItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.MinConstant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinConstantAdapter() {
		if (minConstantItemProvider == null) {
			minConstantItemProvider = new MinConstantItemProvider(this);
		}

		return minConstantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.MaxConstant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaxConstantItemProvider maxConstantItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.MaxConstant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMaxConstantAdapter() {
		if (maxConstantItemProvider == null) {
			maxConstantItemProvider = new MaxConstantItemProvider(this);
		}

		return maxConstantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.FunctionCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionCallItemProvider functionCallItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.FunctionCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionCallAdapter() {
		if (functionCallItemProvider == null) {
			functionCallItemProvider = new FunctionCallItemProvider(this);
		}

		return functionCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.BaseTypeConstant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseTypeConstantItemProvider baseTypeConstantItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.BaseTypeConstant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseTypeConstantAdapter() {
		if (baseTypeConstantItemProvider == null) {
			baseTypeConstantItemProvider = new BaseTypeConstantItemProvider(this);
		}

		return baseTypeConstantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.VectorConstant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VectorConstantItemProvider vectorConstantItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.VectorConstant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVectorConstantAdapter() {
		if (vectorConstantItemProvider == null) {
			vectorConstantItemProvider = new VectorConstantItemProvider(this);
		}

		return vectorConstantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.DimensionOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DimensionOperationItemProvider dimensionOperationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.DimensionOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDimensionOperationAdapter() {
		if (dimensionOperationItemProvider == null) {
			dimensionOperationItemProvider = new DimensionOperationItemProvider(this);
		}

		return dimensionOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.DimensionInt} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DimensionIntItemProvider dimensionIntItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.DimensionInt}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDimensionIntAdapter() {
		if (dimensionIntItemProvider == null) {
			dimensionIntItemProvider = new DimensionIntItemProvider(this);
		}

		return dimensionIntItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.cea.nabla.nabla.DimensionSymbolRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DimensionSymbolRefItemProvider dimensionSymbolRefItemProvider;

	/**
	 * This creates an adapter for a {@link fr.cea.nabla.nabla.DimensionSymbolRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDimensionSymbolRefAdapter() {
		if (dimensionSymbolRefItemProvider == null) {
			dimensionSymbolRefItemProvider = new DimensionSymbolRefItemProvider(this);
		}

		return dimensionSymbolRefItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (nablaModuleItemProvider != null) nablaModuleItemProvider.dispose();
		if (importItemProvider != null) importItemProvider.dispose();
		if (jobItemProvider != null) jobItemProvider.dispose();
		if (iterableItemProvider != null) iterableItemProvider.dispose();
		if (instructionItemProvider != null) instructionItemProvider.dispose();
		if (simpleVarDefinitionItemProvider != null) simpleVarDefinitionItemProvider.dispose();
		if (varGroupDeclarationItemProvider != null) varGroupDeclarationItemProvider.dispose();
		if (instructionBlockItemProvider != null) instructionBlockItemProvider.dispose();
		if (loopItemProvider != null) loopItemProvider.dispose();
		if (affectationItemProvider != null) affectationItemProvider.dispose();
		if (ifItemProvider != null) ifItemProvider.dispose();
		if (returnItemProvider != null) returnItemProvider.dispose();
		if (iterationBlockItemProvider != null) iterationBlockItemProvider.dispose();
		if (spaceIterationBlockItemProvider != null) spaceIterationBlockItemProvider.dispose();
		if (dimensionIterationBlockItemProvider != null) dimensionIterationBlockItemProvider.dispose();
		if (spaceIteratorItemProvider != null) spaceIteratorItemProvider.dispose();
		if (rangeSpaceIteratorItemProvider != null) rangeSpaceIteratorItemProvider.dispose();
		if (singletonSpaceIteratorItemProvider != null) singletonSpaceIteratorItemProvider.dispose();
		if (connectivityCallItemProvider != null) connectivityCallItemProvider.dispose();
		if (spaceIteratorRefItemProvider != null) spaceIteratorRefItemProvider.dispose();
		if (timeIteratorItemProvider != null) timeIteratorItemProvider.dispose();
		if (argOrVarItemProvider != null) argOrVarItemProvider.dispose();
		if (varItemProvider != null) varItemProvider.dispose();
		if (simpleVarItemProvider != null) simpleVarItemProvider.dispose();
		if (connectivityVarItemProvider != null) connectivityVarItemProvider.dispose();
		if (itemTypeItemProvider != null) itemTypeItemProvider.dispose();
		if (connectivityItemProvider != null) connectivityItemProvider.dispose();
		if (itemArgTypeItemProvider != null) itemArgTypeItemProvider.dispose();
		if (functionItemProvider != null) functionItemProvider.dispose();
		if (reductionItemProvider != null) reductionItemProvider.dispose();
		if (argItemProvider != null) argItemProvider.dispose();
		if (dimensionSymbolItemProvider != null) dimensionSymbolItemProvider.dispose();
		if (expressionItemProvider != null) expressionItemProvider.dispose();
		if (reductionCallItemProvider != null) reductionCallItemProvider.dispose();
		if (argOrVarRefItemProvider != null) argOrVarRefItemProvider.dispose();
		if (baseTypeItemProvider != null) baseTypeItemProvider.dispose();
		if (dimensionItemProvider != null) dimensionItemProvider.dispose();
		if (initTimeIteratorItemProvider != null) initTimeIteratorItemProvider.dispose();
		if (nextTimeIteratorItemProvider != null) nextTimeIteratorItemProvider.dispose();
		if (contractedIfItemProvider != null) contractedIfItemProvider.dispose();
		if (orItemProvider != null) orItemProvider.dispose();
		if (andItemProvider != null) andItemProvider.dispose();
		if (equalityItemProvider != null) equalityItemProvider.dispose();
		if (comparisonItemProvider != null) comparisonItemProvider.dispose();
		if (plusItemProvider != null) plusItemProvider.dispose();
		if (minusItemProvider != null) minusItemProvider.dispose();
		if (mulOrDivItemProvider != null) mulOrDivItemProvider.dispose();
		if (moduloItemProvider != null) moduloItemProvider.dispose();
		if (parenthesisItemProvider != null) parenthesisItemProvider.dispose();
		if (unaryMinusItemProvider != null) unaryMinusItemProvider.dispose();
		if (notItemProvider != null) notItemProvider.dispose();
		if (intConstantItemProvider != null) intConstantItemProvider.dispose();
		if (realConstantItemProvider != null) realConstantItemProvider.dispose();
		if (boolConstantItemProvider != null) boolConstantItemProvider.dispose();
		if (minConstantItemProvider != null) minConstantItemProvider.dispose();
		if (maxConstantItemProvider != null) maxConstantItemProvider.dispose();
		if (functionCallItemProvider != null) functionCallItemProvider.dispose();
		if (baseTypeConstantItemProvider != null) baseTypeConstantItemProvider.dispose();
		if (vectorConstantItemProvider != null) vectorConstantItemProvider.dispose();
		if (dimensionOperationItemProvider != null) dimensionOperationItemProvider.dispose();
		if (dimensionIntItemProvider != null) dimensionIntItemProvider.dispose();
		if (dimensionSymbolRefItemProvider != null) dimensionSymbolRefItemProvider.dispose();
	}

}
